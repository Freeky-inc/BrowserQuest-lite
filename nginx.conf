events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream backend {
        ip_hash; # Ensure sticky sessions
        server server1:8000;
        server server2:8000;
        server server3:8000;
        server server4:8000;
        server server5:8000;
    }

    server {
        listen 80;
        server_name localhost;

        # Socket.IO endpoint
        location /socket.io/ {
            proxy_pass http://backend;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            
            # Proxy headers
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Socket.IO v4 specific settings
            proxy_buffers 8 32k;
            proxy_buffer_size 64k;

            # Timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;

            # WebSocket specific
            proxy_set_header X-NginX-Proxy true;
            proxy_cache_bypass $http_upgrade;
            
            # # CORS headers
            # add_header 'Access-Control-Allow-Origin' '*' always;
            # add_header 'Access-Control-Allow-Credentials' 'true' always;
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            # add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        }

        location / {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}